name: Build

on:
  push:
    branches: [main]
  pull_request:
env:
  NODE_VERSION: 16.x
jobs:   
  lint:
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: $NODE_VERSION
          cache: npm
      - run: npm ci
      - run: npm run lint

  parser:
    runs-on: ubuntu-latest
    env:
      CI: true
      SUB_PROJECT: parser
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: $NODE_VERSION
          cache: npm
      - run: npm ci
        working-directory: $SUB_PROJECT
      - run: npm run build
        working-directory: $SUB_PROJECT

  webview:
    runs-on: ubuntu-latest
    env:
      CI: true
      SUB_PROJECT: webviews
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: $NODE_VERSION
          cache: npm
      - run: npm ci
        working-directory: $SUB_PROJECT
      - run: npm run build
        working-directory: $SUB_PROJECT

  client:
    runs-on: ubuntu-latest
    env:
      CI: true
      SUB_PROJECT: client
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: $NODE_VERSION
          cache: npm
      - run: npm ci
        working-directory: $SUB_PROJECT
      - run: npm run build
        working-directory: $SUB_PROJECT

  server:
    needs: 
      - parser
    runs-on: ubuntu-latest
    env:
      CI: true
      SUB_PROJECT: server
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: $NODE_VERSION
          cache: npm
      - run: npm ci
        working-directory: $SUB_PROJECT
      - run: npm run build
        working-directory: $SUB_PROJECT

  test:
    runs-on: ubuntu-latest
    needs: 
      - parser
      - server
      - webview
      - client
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: $NODE_VERSION
          cache: npm
      - run: npm ci
      - run: npm run test

  publish:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: $NODE_VERSION
          cache: npm
      - run: npm ci
      - name: Package
        run: |
          npm run build
          npx vsce package
        env:
          CI: true
      - name: Automatic Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to Visual Studio Marketplace
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          npx vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
      - name: Publish to OpenVSX
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          npx ovsx publish
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
